---
version: "3.9"

x-common-variables: &common-variables
  DATABASE_URI: postgresql://nwa:nwa@postgres/orchestrator-core

services:
  #
  # orchestrator-core-gui
  #
  gui:
    image: "ghcr.io/workfloworchestrator/orchestrator-core-gui:latest"
    env_file: orchestrator-core-gui.env
    ports:
      - "3000:8080"
    depends_on:
      orchestrator:
        condition: service_started
  #
  # orchestrator-core
  #
  orchestrator:
    image: "ghcr.io/workfloworchestrator/orchestrator-core:${CORE_VERSION:-latest}"
    user: "${CI_USER:-}"
    environment:
      <<: *common-variables
      ENABLE_WEBSOCKETS: "False"
    ports:
      - "8080:8080"
    volumes:
      - ${GITHUB_WORKSPACE:-.}:/home/orchestrator
    depends_on:
      db-upgrade-heads:
        condition: service_completed_successfully
  #
  # orchestrator db upgrade heads
  #
  db-upgrade-heads:
    image: "ghcr.io/workfloworchestrator/orchestrator-core:${CORE_VERSION:-latest}"
    command: ["python", "main.py", "db", "upgrade", "heads"]
    user: "${CI_USER:-}"
    environment:
      <<: *common-variables
    volumes:
      - ${GITHUB_WORKSPACE:-.}:/home/orchestrator
    depends_on:
      db-init:
        condition: service_completed_successfully
  #
  # orchestrator db init
  #
  db-init:
    image: "ghcr.io/workfloworchestrator/orchestrator-core:${CORE_VERSION:-latest}"
    command: ["sh", "-c", "test -d migrations || python main.py db init"]
    user: "${CI_USER:-}"
    environment:
      <<: *common-variables
    volumes:
      - ${GITHUB_WORKSPACE:-.}:/home/orchestrator
    depends_on:
      postgres:
        condition: service_healthy
  #
  # postgres
  #
  postgres:
    image: 'postgres:13'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: nwa
      POSTGRES_PASSWORD: nwa
      POSTGRES_DB: orchestrator-core
    volumes:
      - db-data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "nwa", "--dbname", "orchestrator-core"]
      interval: "3s"
      timeout: "2s"
      retries: 20
      start_period: "5s"

volumes:
  db-data:
